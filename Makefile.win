TARGET         = shrt
FILES          = *.cu *.h Makefile
VER            = `date +%y%m%d`

CUDAARCH       = compute_61
CUDACODE       = sm_61

NVCC           = nvcc
NVCCFLAGS      = -gencode arch=$(CUDAARCH),code=$(CUDACODE)
NVCCLIBS       = -lcufft -lcurand
IGNOREWARNING  = -Xcompiler "/wd 4819"

ifeq ($(debug),on)
  NVCCFLAGS += -DDEBUG -g -Xcompiler "-Wall -Wextra -Wno-long-long"
else
  NVCCFLAGS += -Xcompiler "/O2"
endif

ifeq ($(dble),on)
  NVCCFLAGS += -DDBLE
endif

SRCS = fft.cu  fields.cu  file_access.cu  fourier.cu  main.cu  shear.cu  time_integral.cu
OBJS = $(SRCS:.cu=.obj)
DEPS = $(OBJS:.obj=.d)

all: $(TARGET)

.PHONY: clean distclean tar
.SUFFIXES:
.SUFFIXES: .cu .obj

-include Makefile.local
-include $(DEPS)

.cu.obj:
	$(NVCC) -M  $(NVCCFLAGS) $(IGNOREWARNING) $< > $(<:.cu=.d)
	$(NVCC) -dc $(NVCCFLAGS) $(IGNOREWARNING) $<

# main program
$(TARGET): $(OBJS)
	$(NVCC) $^ -o $@ $(NVCCFLAGS) $(NVCCLIBS)

clean:
	rm -rf *.obj *.d *.exp *.lib *~ \#*

distclean: clean
	rm -rf $(TARGET)

tar:
	@echo $(TARGET)-$(VER) > .package
	@-rm -fr `cat .package`
	@mkdir `cat .package`
	@ln $(FILES) `cat .package`
	tar cvf - `cat .package` | bzip2 -9 > `cat .package`.tar.bz2
	@-rm -fr `cat .package` .package
